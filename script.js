class MesoMarketTracker{constructor(){this.initializeElements(),this.initializeEventListeners(),this.updateAnalysis()}initializeElements(){this.buyPriceInput=document.getElementById("buyPrice"),this.sellPriceInput=document.getElementById("sellPrice"),this.currentBuyPrice=document.getElementById("currentBuyPrice"),this.currentSellPrice=document.getElementById("currentSellPrice"),this.priceDifference=document.getElementById("priceDifference"),this.tradingFee=document.getElementById("tradingFee"),this.expectedProfit=document.getElementById("expectedProfit")}initializeEventListeners(){[this.buyPriceInput,this.sellPriceInput].forEach((e=>{e.addEventListener("input",(()=>this.updateAnalysis())),e.addEventListener("keyup",(()=>this.updateAnalysis())),e.addEventListener("change",(()=>this.updateAnalysis()))}))}calculateExpectedProfit(e,t){return t-e-.01*t}updateAnalysis(){const e=parseFloat(this.buyPriceInput.value)||0,t=parseFloat(this.sellPriceInput.value)||0;if(this.currentBuyPrice.textContent=e>0?`${e.toLocaleString()} Maple Point`:"-",this.currentSellPrice.textContent=t>0?`${t.toLocaleString()} Maple Point`:"-",e>0||t>0){const i=t-e;this.priceDifference.textContent=`${i.toLocaleString()} Maple Point`,this.priceDifference.className=i>0?"value profit-positive":i<0?"value profit-negative":"value profit-neutral";const n=.01*t;this.tradingFee.textContent=t>0?`${Math.round(n).toLocaleString()} Maple Point`:"-";const r=this.calculateExpectedProfit(e,t);e>0&&t>0?(this.expectedProfit.textContent=`${Math.round(r).toLocaleString()} Maple Point`,this.expectedProfit.className=r>0?"value profit-positive":r<0?"value profit-negative":"value profit-neutral"):(this.expectedProfit.textContent="-",this.expectedProfit.className="value")}else this.priceDifference.textContent="-",this.priceDifference.className="value",this.tradingFee.textContent="-",this.expectedProfit.textContent="-",this.expectedProfit.className="value"}}document.addEventListener("DOMContentLoaded",(()=>{new MesoMarketTracker}));